/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.analysis;

import java.util.*;
import sc.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOptvardeclistProgram(AOptvardeclistProgram node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFoncdeclistProgram(AFoncdeclistProgram node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOptvardeclist(AOptvardeclist node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOneormoreFoncdeclist(AOneormoreFoncdeclist node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALastFoncdeclist(ALastFoncdeclist node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAWithvardecFoncdec(AWithvardecFoncdec node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANovardecFoncdec(ANovardecFoncdec node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAWithparamParamlist(AWithparamParamlist node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAWithoutparamParamlist(AWithoutparamParamlist node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMorethanoneVardeclist(AMorethanoneVardeclist node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOneVardeclist(AOneVardeclist node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMoreVardeclistbis(AMoreVardeclistbis node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALastVardeclistbis(ALastVardeclistbis node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIntVardec(AIntVardec node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInttableVardec(AInttableVardec node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVarVar(AVarVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATableVar(ATableVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOrExp(AOrExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExp1Exp(AExp1Exp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAndExp1(AAndExp1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExp2Exp1(AExp2Exp1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEqualsExp2(AEqualsExp2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInfExp2(AInfExp2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExp3Exp2(AExp3Exp2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPlusExp3(APlusExp3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMinusExp3(AMinusExp3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExp4Exp3(AExp4Exp3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultExp4(AMultExp4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivExp4(ADivExp4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExp5Exp4(AExp5Exp4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANotExp5(ANotExp5 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParenthesisExp5(AParenthesisExp5 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumberExp5(ANumberExp5 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACallExp5(ACallExp5 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVarExp5(AVarExp5 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAReadExp5(AReadExp5 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMorethanoneListofexp(AMorethanoneListofexp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANoneListofexp(ANoneListofexp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMoreListofexpbis(AMoreListofexpbis node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALastListofexpbis(ALastListofexpbis node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAssinstrInstr(AAssinstrInstr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfinstrInstr(AIfinstrInstr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAWhileinstrInstr(AWhileinstrInstr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACallinstrInstr(ACallinstrInstr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARetinstrInstr(ARetinstrInstr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAWriteinstrInstr(AWriteinstrInstr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEmptyinstrInstr(AEmptyinstrInstr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInstrblocInstr(AInstrblocInstr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAssinstr(AAssinstr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfinstr(AIfinstr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAElseIfinstrbis(AElseIfinstrbis node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANoelseIfinstrbis(ANoelseIfinstrbis node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAWhileinstr(AWhileinstr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACallinstr(ACallinstr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACall(ACall node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARetinstr(ARetinstr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAWriteinstr(AWriteinstr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEmptyinstr(AEmptyinstr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInstrbloc(AInstrbloc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInstrInstrblocbis(AInstrInstrblocbis node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANoinstrInstrblocbis(ANoinstrInstrblocbis node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumber(TNumber node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInt(TInt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMinus(TMinus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLPar(TLPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRPar(TRPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLBrac(TLBrac node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRBrac(TRBrac node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLCurbrac(TLCurbrac node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRCurbrac(TRCurbrac node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOr(TOr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAnd(TAnd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEquals(TEquals node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInf(TInf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNot(TNot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIf(TIf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTThen(TThen node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTElse(TElse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWhile(TWhile node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDo(TDo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReturn(TReturn node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRead(TRead node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWrite(TWrite node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSemicolon(TSemicolon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEspaces(TEspaces node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCommentaire(TCommentaire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
